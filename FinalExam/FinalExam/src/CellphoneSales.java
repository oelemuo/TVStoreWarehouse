import java.io.*;
import java.util.*;
/**
 * @author Obinna Elemuo
 * CMSY265 - Fall 2023
 * 12/13/2023
 * This program reads a list of cellphone brand names from a file ("cell.txt") and calculates
 * the total sales for each brand. It maintains a count of the number of units sold per brand
 * and the total revenue generated by each brand. The sales data is sorted by brand name
 * using a TreeMap. This data structure was chosen because of its efficiency in storing key-value pairs in a sorted order.
 * The keys (brand names) are sorted in their natural order. The program finally displays the total sales amount for each brand and 
 * the overall total sales amount for the day. This implementation makes use of the BrandInfo class to track individual brand data.
 * @version 1.0
 */
public class CellphoneSales {

    // Constants as final variables
    private static final String FILE_NAME = "C:\\CMSY265\\FinalExam\\src\\cell.txt";
    private static final String APPLE = "Apple";
    private static final String SAMSUNG = "Samsung";
    private static final String LG = "LG";
    private static final double APPLE_PRICE = 1199.99;
    private static final double SAMSUNG_PRICE = 699.99;
    private static final double LG_PRICE = 499.99;
    private static final double DEFAULT_PRICE = 299.99;
    private static final double INITIAL_TOTAL_SALES = 0.0;


    /**
     * main method
     * @param args
     */
    public static void main(String[] args) {
        displayHeader();
        // create a File object for the data file
        File file = new File(FILE_NAME);
        if (!file.exists() || !file.canRead()) {
            System.out.println("The data file cannot be found or read. Please check the file and try again.");
            return;
        }
        // utilization of Data Structure - TreeMap
        TreeMap<String, BrandSalesData> salesData = new TreeMap<>();
        readSalesData(file, salesData);
        displaySalesData(salesData);
    }

    /**
     * method to displays the header information
     */
    private static void displayHeader() {
        System.out.println("CMSY 265 Final Exam");
        System.out.println("Copyright ©2022 – Howard Community College All rights reserved; Unauthorized duplication prohibited.\n");
        System.out.println("CMSY 265 Cell Phone Sales Program\n");
        System.out.println("Cell Phones Sold Today:\n");
    }

    /**
     * method to reads the brand names from the file, updates the sales data for each brand,
     * and stores it in the TreeMap.
     * @param file data file
     * @param salesData TreeMap object which stores sales info
     */
    private static void readSalesData(File file, TreeMap<String, BrandSalesData> salesData) {
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String brand;
            // Read each line (brand name) from the file
            while ((brand = reader.readLine()) != null) {
                // add to the TreeMap with the sales data for each brand
                salesData.computeIfAbsent(brand, k -> new BrandSalesData()).addSale(getPrice(brand));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * method to get the price associated with the brand
     *
     * @param brand The brand of phone.
     * @return The price of the phone
     */
    private static double getPrice(String brand) {
        switch (brand) {
            case APPLE: return APPLE_PRICE;
            case SAMSUNG: return SAMSUNG_PRICE;
            case LG: return LG_PRICE;
            default: return DEFAULT_PRICE;
        }
    }

    /**
     * method to displays the number of phones sold, the sales amount for each brand, and the overall total sales amount.
     * @param salesData The TreeMap containing the sales data for each brand.
     */
    private static void displaySalesData(TreeMap<String, BrandSalesData> salesData) {
        // initialize totalSales to 0
        double totalSales = INITIAL_TOTAL_SALES;
        // Iterate through the TreeMap
        for (Map.Entry<String, BrandSalesData> entry : salesData.entrySet()) {
            BrandSalesData info = entry.getValue();
            System.out.println("There were " + info.getCount() + " " + entry.getKey() + " phones sold for " + String.format("$%.2f", info.getTotalSales()));
            totalSales += info.getTotalSales();
        }
        System.out.println("\nThe store had total sales of " + String.format("$%.2f", totalSales));
        System.out.println("Thank you for using the program");
    }

}